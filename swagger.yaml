openapi: 3.0.0
info:
  title: Flight Booking API
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8000
paths:
  /api/v1/flights/:
    get:
      summary: Get a list of flights
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                - origin_city: "City1"
                  origin_code: "C1"
                  origin_country: "Country1"
                  destination_city: "City2"
                  destination_code: "C2"
                  destination_country: "Country2"
                  depart_time: "14:30:00"
                  duration: "3:30:00"
                  plane: "Plane1"
                  airline: "Airline1"
                - origin_city: "City3"
                  origin_code: "C3"
                  origin_country: "Country3"
                  destination_city: "City4"
                  destination_code: "C4"
                  destination_country: "Country4"
                  depart_time: "18:45:00"
                  duration: "2:45:00"
                  plane: "Plane2"
                  airline: "Airline2"
    post:
      summary: Create a new flight
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                origin_city:
                  type: string
                  maxLength: 64
                origin_code:
                  type: string
                  maxLength: 3
                origin_country:
                  type: string
                  maxLength: 64
                destination_city:
                  type: string
                  maxLength: 64
                destination_code:
                  type: string
                  maxLength: 3
                destination_country:
                  type: string
                  maxLength: 64
                depart_time:
                  type: string
                  format: time
                duration:
                  type: string
                  format: duration
                plane:
                  type: string
                  maxLength: 24
                airline:
                  type: string
                  maxLength: 64
      responses:
        '201':
          description: Flight created successfully

  /api/v1/flights/{id}:
    get:
      summary: Get details of a specific flight
      parameters:
        - name: id
          in: path
          description: ID of the flight
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                origin_city: "City1"
                origin_code: "C1"
                origin_country: "Country1"
                destination_city: "City2"
                destination_code: "C2"
                destination_country: "Country2"
                depart_time: "14:30:00"
                duration: "3:30:00"
                plane: "Plane1"
                airline: "Airline1"
    put:
      summary: Update an existing flight
      parameters:
        - name: id
          in: path
          description: ID of the flight to update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                origin_city:
                  type: string
                  maxLength: 64
                origin_code:
                  type: string
                  maxLength: 3
                origin_country:
                  type: string
                  maxLength: 64
                destination_city:
                  type: string
                  maxLength: 64
                destination_code:
                  type: string
                  maxLength: 3
                destination_country:
                  type: string
                  maxLength: 64
                depart_time:
                  type: string
                  format: time
                duration:
                  type: string
                  format: duration
                plane:
                  type: string
                  maxLength: 24
                airline:
                  type: string
                  maxLength: 64
      responses:
        '200':
          description: Flight updated successfully
    delete:
      summary: Delete a flight
      parameters:
        - name: id
          in: path
          description: ID of the flight to delete
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Flight deleted successfully
  /api/v1/flights/cities/{origin_city}/{destination_city}/:
    get:
      summary: Get flights by origin and destination cities
      parameters:
        - name: origin_city
          in: path
          description: Origin city for flight search
          required: true
          schema:
            type: string
            maxLength: 64
        - name: destination_city
          in: path
          description: Destination city for flight search
          required: true
          schema:
            type: string
            maxLength: 64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                - origin_city: "City1"
                  origin_code: "C1"
                  origin_country: "Country1"
                  destination_city: "City2"
                  destination_code: "C2"
                  destination_country: "Country2"
                  depart_time: "14:30:00"
                  duration: "3:30:00"
                  plane: "Plane1"
                  airline: "Airline1"
  /api/v1/passengers:
    get:
      summary: Get a list of passengers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                - first_name: "John"
                  last_name: "Doe"
                  gender: "Male"
                - first_name: "Jane"
                  last_name: "Doe"
                  gender: "Female"
    post:
      summary: Create a new passenger
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  maxLength: 64
                last_name:
                  type: string
                  maxLength: 64
                gender:
                  type: string
                  maxLength: 20
      responses:
        '201':
          description: Passenger created successfully

  /api/v1/passengers/{id}:
    get:
      summary: Get details of a specific passenger
      parameters:
        - name: id
          in: path
          description: ID of the passenger
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                first_name: "John"
                last_name: "Doe"
                gender: "Male"
    put:
      summary: Update an existing passenger
      parameters:
        - name: id
          in: path
          description: ID of the passenger to update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  maxLength: 64
                last_name:
                  type: string
                  maxLength: 64
                gender:
                  type: string
                  maxLength: 20
      responses:
        '200':
          description: Passenger updated successfully
    delete:
      summary: Delete a passenger
      parameters:
        - name: id
          in: path
          description: ID of the passenger to delete
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Passenger deleted successfully

  /api/v1/tickets:
    get:
      summary: Get a list of tickets
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                - user: "username1"
                  flight:
                    origin_city: "City1"
                    origin_code: "C1"
                    origin_country: "Country1"
                    destination_city: "City2"
                    destination_code: "C2"
                    destination_country: "Country2"
                    depart_time: "14:30:00"
                    duration: "3:30:00"
                    plane: "Plane1"
                    airline: "Airline1"
                  passengers:
                    - first_name: "John"
                      last_name: "Doe"
                      gender: "Male"
                  seat_class: "Economy"
                  booking_date: "2023-01-01T12:00:00"
                  status: "Confirmed"
    post:
      summary: Create a new ticket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: "Username of the user"
                flight_id:
                  type: integer
                  description: "ID of the flight"
                passengers:
                  type: array
                  items:
                    type: object
                    properties:
                      first_name:
                        type: string
                        maxLength: 64
                      last_name:
                        type: string
                        maxLength: 64
                      gender:
                        type: string
                        maxLength: 20
                seat_class:
                  type: string
                  maxLength: 20
                status:
                  type: string
                  maxLength: 45
      responses:
        '201':
          description: Ticket created successfully

  /api/v1/tickets/{id}:
    get:
      summary: Get details of a specific ticket
      parameters:
        - name: id
          in: path
          description: ID of the ticket
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                user: "username1"
                flight:
                  origin_city: "City1"
                  origin_code: "C1"
                  origin_country: "Country1"
                  destination_city: "City2"
                  destination_code: "C2"
                  destination_country: "Country2"
                  depart_time: "14:30:00"
                  duration: "3:30:00"
                  plane: "Plane1"
                  airline: "Airline1"
                passengers:
                  - first_name: "John"
                    last_name: "Doe"
                    gender: "Male"
                seat_class: "Economy"
                booking_date: "2023-01-01T12:00:00"
                status: "Confirmed"
    put:
      summary: Update an existing ticket
      parameters:
        - name: id
          in: path
          description: ID of the ticket to update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  description: "Username of the user"
                flight_id:
                  type: integer
                  description: "ID of the flight"
                passengers:
                  type: array
                  items:
                    type: object
                    properties:
                      first_name:
                        type: string
                        maxLength: 64
                      last_name:
                        type: string
                        maxLength: 64
                      gender:
                        type: string
                        maxLength: 20
                seat_class:
                  type: string
                  maxLength: 20
                status:
                  type: string
                  maxLength: 45
      responses:
        '200':
          description: Ticket updated successfully
    delete:
      summary: Delete a ticket
      parameters:
        - name: id
          in: path
          description: ID of the ticket to delete
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Ticket deleted successfully

  /api/v1/tickets/search:
    get:
      summary: Search for tickets based on origin city
      parameters:
        - name: origin_city
          in: query
          description: Departure city for ticket search
          required: true
          schema:
            type: string
            maxLength: 64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                - user: "username1"
                  flight:
                    origin_city: "City1"
                    origin_code: "C1"
                    origin_country: "Country1"
                    destination_city: "City2"
                    destination_code: "C2"
                    destination_country: "Country2"
                    depart_time: "14:30:00"
                    duration: "3:30:00"
                    plane: "Plane1"
                    airline: "Airline1"
                  passengers:
                    - first_name: "John"
                      last_name: "Doe"
                      gender: "Male"
                  seat_class: "Economy"
                  booking_date: "2023-01-01T12:00:00"
                  status: "Confirmed"

  /api/v1/tickets/search-by-destination:
    get:
      summary: Search for tickets based on destination city
      parameters:
        - name: destination_city
          in: query
          description: Destination city for ticket search
          required: true
          schema:
            type: string
            maxLength: 64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                - user: "username2"
                  flight:
                    origin_city: "City3"
                    origin_code: "C3"
                    origin_country: "Country3"
                    destination_city: "City4"
                    destination_code: "C4"
                    destination_country: "Country4"
                    depart_time: "18:45:00"
                    duration: "2:45:00"
                    plane: "Plane2"
                    airline: "Airline2"
                  passengers:
                    - first_name: "Jane"
                      last_name: "Doe"
                      gender: "Female"
                  seat_class: "Business"
                  booking_date: "2023-01-02T15:30:00"
                  status: "Confirmed"
